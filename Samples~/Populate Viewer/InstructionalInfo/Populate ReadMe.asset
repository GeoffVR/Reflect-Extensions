%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: fcf7219bab7fe46a1ad266029b2fee19, type: 3}
  m_Name: Populate ReadMe
  m_EditorClassIdentifier: 
  icon: {fileID: 2800000, guid: fe5f2432d645c2d43b2e97d5a2fbc5da, type: 3}
  title: Adding life to the Reflect Viewer
  sections:
  - heading: 
    text: This viewer builds on top of the default Reflect viewer by adding buttons,
      top menus and controllers to the UI game objects in the menu under the Canvas
      game object. The following is an overview for getting a custom feature like
      replacing RPC and trees, switching BIM lights, overriding materials and spawning characters using AI Path Finding.
    linkText: 
    url: 
  - heading: BIM Lights Toggle
    text: Reflect imports lights from the BIM and instantiates Unity light objects as children of the BIM light objects,
    all under the Root object. This simple script will toggle all lights in the hierarchy:
    linkText: LightsControls.cs
    url: LightsControls
  - heading: Daylight & Wind
    text: 'This viewer contains a Daylight Rig, made of a Directional Light animated over time using Timeline,
    which also animates the Ambient Color:'
    linkText: Daylight
    url: 
  - heading: 
    text: 'There is also a WindZone, which influences trees, and Clouds:'
    linkText: WindZone
    url: 
  - heading: 
    text: 'Both Daylight and WindZone controls are linked to sliders in the Daylight Canvas:'
    linkText: Daylight Canvas
    url: 
  - heading: Materials Override
    text: The Materials Override component added on the Sync Root will let you override all materials with Material Mappings.
    The Material Mappings can be created in the Editor, and then assigned to the component, or simplay put in a Resources folder,
    or put in AssetBundles to be added to a pre-built Runtime.
    linkText: Root
    url: 
  - heading: 
    text: The White Boxing mappings in the Resources folder will replace all 
    opaque objects with a white material and all transparent material with glass.
    linkText: White Boxing Mappings
    url: White Boxing
  - heading: Characters
    text: "The Characters object uses two scripts. One to generate a NavMesh once the Reflect model was loaded or updated.
    And another to randomly instantiate objects (Ethan Character). The instantiation parameters are exposed in the Characters Canvas."
    linkText: Characters
    url: 
  - heading: Replacing Trees
    text: 'The ObjectPairing script will replace Trees with a SpeedTree Broadleaf prefab, matching their scale in incoming height:'
    linkText: Trees
    url: 
  - heading: Custom Objects (AssetBundles)
    text: 'Custom Objects can be packed in AssetBundles, then loaded and instantiated in place of Revit objects with custom parameters.'
    linkText: Asset Bundles
    url: 
  - heading: 
    text: 'A custom Revit family is included for reference.'
    linkText: AssetBundle.rfa
    url: AssetBundle
  loadedLayout: 1
